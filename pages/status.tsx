// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import { PageParamsProvider as PageParamsProvider__ } from "@plasmicapp/react-web/lib/host";

import { PlasmicStatus } from "../components/plasmic/a_d/PlasmicStatus";
import { useRouter } from "next/router";
import { useMutablePlasmicQueryData, usePlasmicQueryData } from "@plasmicapp/react-web/lib/query";
import { supabase } from "@/components/supabase/supabase";

function Status() {

  const { data: inscritos, isLoading: isLoadingInscritos } = 
    useMutablePlasmicQueryData("inscritos", async () => {
      const { data: inscritos, error: err1 } = await supabase
        .from("inscritos_fernandinho")
        .select(
          `
            *,
            payments (id, paid, lote)
          `
        );
        if (!inscritos) {
          throw new Error(err1?.message ?? "Unknown error");
        }
        const paid = [];
        for (const inscricao of inscritos) {
          const newLine = {
            id: inscricao.id,
            fullName: inscricao.name,
            cpf: inscricao.cpf,
            telefone: inscricao.telefone,
            email: inscricao.email,
            lote: inscricao.ticketInfo.lote,
            vip: inscricao.ticketInfo.vip,
            geral: inscricao.ticketInfo.geral,
            total: inscricao.ticketTotalPrice,
            status: inscricao.payments?.[0]?.paid ? "PAGO" : "AGUARDANDO",
          }

          if (inscricao.payments?.find((p: any) => p.paid)) {
            paid.push(newLine);
          }
        }
        return paid;
      }
    );

  const { data: checkin, isLoading: isLoadingCheckIn} = useMutablePlasmicQueryData("checkin", async () => {
    const { data, error } = await supabase
      .from("checkin")
      .select("*");

    if (!data) {
      throw new Error(error.message ?? "Unknown error");
    }
    return data;
  }, { refreshInterval: 1000 });

  const count = {
    vipIn: 0,
    vipOut: 0,
    geralIn: 0,
    geralOut: 0
  }


  if (inscritos && checkin) {
    for (const inscrito of inscritos) {
      for (let i = 0; i < inscrito.vip; i++) {
        const row = checkin.find(r => r.inscricao_id === inscrito.id && r.inscricao_number === i);
        if (row) {
          count.vipIn++;
        } else {
          count.vipOut++;
        }
      }
      for (let i = 0; i < inscrito.geral; i++) {
        const row = checkin.find(r => r.inscricao_id === inscrito.id && r.inscricao_number === (i + inscrito.vip));
        if (row) {
          count.geralIn++;
        } else {
          count.geralOut++;
        }
      }
    }
  }
  return (
    <PageParamsProvider__
      route={useRouter()?.pathname}
      params={useRouter()?.query}
      query={useRouter()?.query}
    >
      <PlasmicStatus
        vipIn={count.vipIn || "0"}
        vipOut={count.vipOut || "0"}
        geralIn={count.geralIn || "0"}
        geralOut={count.geralOut || "0"}
      />
    </PageParamsProvider__>
  );
}

export default Status;
